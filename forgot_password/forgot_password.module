<?php

/**
 * @file
 * FORGOT PASSWORD module
 *
 * It's ridiculous to have to write this because Drupal already has built-in "forgot password"
 * functionality, but some people think it's confusing. This module offers an alternative
 * which is more customizable.
 *
 * So we'll need a page where the user will enter their user name or email address.
 * Admins should be able to customize whether it's user name or email address. Or both, I suppose.
 * Text on this page, if any, would be customizable by the admin. (cbta)
 *
 * Submit that. It sends an email (text of which is slightly cbta) with a link to another page.
 *
 * Text on this page, if any, would be cbta.
 * Two fields. New password and re-type password.
 *
 * Submit that.
 * Redirects you to a url (cbta) with a Drupal status message (cbta).
 *
 */
 

/**
 * hook_perm
 * - customize options
 */
function forgot_password_perm() {
	return array('customize forgot password settings');
}

 
/**
 * hook_menu
 */
function forgot_password_menu() {
	$items = array();
	
	$items['admin/settings/forgot_password'] = array(
		'title' => 'Forgot Password Settings',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('forgot_password_settings'),
		'access callback' => 'user_access',
		'access arguments' => array('customize forgot password settings'),
		'type' => MENU_NORMAL_ITEM
	);
	
	$items['forgot_password'] = array(
		'title' => 'Forgot Password',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('forgot_password_screen1'),
		'access callback' => true,
		'type' => MENU_CALLBACK
	);

	$items['forgot_password/%secret_key'] = array(
		'title' => 'Forgot Password',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('forgot_password_screen2', 1),
		'access callback' => true,
		'type' => MENU_CALLBACK
	);
	
	$items['forgot_password/cron'] = array(
		'title' => 'Forgot Password Cron',
		'page callback' => 'forgot_password_cron',
		'access callback' => true,
		'type' => MENU_CALLBACK
	);

	
	return $items;
}


/**
 * Load a secret key
 */
function secret_key_load($foo) {
	$sql  = 'SELECT uid FROM forgot_password ';
	$sql .= 'WHERE secret_key = "' . $foo . '" ';
	return db_result(db_query($sql));
}


/**
 * Set up fields.
 *
 * @param string $field
 *
 * @return mixed
 */
function forgot_password_variable($field) {
	$prefix = 'forgot_password_';
	
	$vars = array();
	$vars['which'] = 'email';
	$vars['username_label'] = 'User name';
	$vars['email_label'] = 'E-mail address';
	$vars['button1_label'] = 'Request new password';
	$vars['message1'] = 'Further instructions have been sent to the email address associated with this account.';

	$default_text  = 'You have requested a new password. ';
	$default_text .= 'Click on the link below to enter a new password. ';
	$default_text .= 'If you do not want to enter a new password, ignore this email.';
	$vars['email_text'] = $default_text;
	
	$vars['message2'] = 'Password changed!';
	$vars['redirect'] = '/';
	$vars['button2_label'] = 'Change my password';
	
	return variable_get($prefix . $field, $vars[$field]);
	
}


/**
 * Admin Settings
 */
function forgot_password_settings() {
	$form = array();
	
	$prefix = 'forgot_password_';
	
	
	// first
	
	$form['first'] = array(
		'#type' => 'fieldset',
		'#title' => 'First Screen'
	);
	
	$form['first']['info'] = array(
		'#value' => 'This is the first screen a user sees, which prompts them for a user name or email address.',
		'#prefix' => '<p>',
		'#suffix' => '</p>'
	);
	
	$form['first'][$prefix . 'which'] = array(
		'#type' => 'radios',
		'#title' => 'Prompt for',
		'#options' => array(
				'username' => 'User name',
				'email' => 'Email address',
				'both' => 'Both user name and email address'
			),
		'#description' => 'This is what we will ask the user for.',
		'#default_value' => forgot_password_variable('which')
	);
	
	$form['first'][$prefix . 'username_label'] = array(
		'#type' => 'textfield',
		'#title' => 'Label for user name field',
		'#default_value' => forgot_password_variable('username_label')
	);

	$form['first'][$prefix . 'email_label'] = array(
		'#type' => 'textfield',
		'#title' => 'Label for email address field',
		'#default_value' => forgot_password_variable('email_label')
	);
	
	$form['first'][$prefix . 'button1_label'] = array(
		'#type' => 'textfield',
		'#title' => 'Label for button',
		'#default_value' => forgot_password_variable('button1_label')
	);
	
	$form['first'][$prefix . 'message1'] = array(
		'#type' => 'textfield',
		'#title' => 'Message after request submitted',
		'#default_value' => forgot_password_variable('message1')
	);
	
	
	$form['first'][$prefix . 'email_text'] = array(
		'#type' => 'textarea',
		'#title' => 'Text for email',
		'#default_value' => forgot_password_variable('email_text')
	);
	
	
	// second
	
	
	$form['second'] = array(
		'#type' => 'fieldset',
		'#title' => 'Second Screen'
	);
	
	$form['second']['info'] = array(
		'#value' => 'This is the second screen a user sees, which prompts them for a new password.',
		'#prefix' => '<p>',
		'#suffix' => '</p>'
	);
	
	$form['second'][$prefix . 'message2'] = array(
		'#type' => 'textfield',
		'#title' => 'Message after password changed',
		'#default_value' => forgot_password_variable('message2')
	);
	
	$form['second'][$prefix . 'redirect'] = array(
		'#type' => 'textfield',
		'#title' => 'URL after submit',
		'#default_value' => forgot_password_variable('redirect')
	);
	
	$form['first'][$prefix . 'button2_label'] = array(
		'#type' => 'textfield',
		'#title' => 'Label for button',
		'#default_value' => forgot_password_variable('button2_label')
	);

	
	$form['save'] = array(
		'#type' => 'submit',
		'#value' => 'Save'
	);
	
	
	
	return $form;
}


/**
 * hook_submit
 */
function forgot_password_settings_submit($form, &$form_state) {

	$prefix = 'forgot_password_';
	$prefix_len = strlen($prefix);

	foreach ($form_state['values'] as $f => $v) {
		if (substr($f, 0, $prefix_len) == $prefix) {
			variable_set($f, $v);
		}
	}
	
	drupal_set_message('Settings updated!');

}


/**
 * Form prompting user for name/email.
 */
function forgot_password_screen1() {

	$prefix = 'forgot_password_';

	$form = array();

	$which = forgot_password_variable('which');
	if ($which == 'username' || $which == 'both') {
		$form[$prefix . 'username'] = array(
			'#type' => 'textfield',
			'#title' => forgot_password_variable('username_label')
		);
		if ($which == 'username') {
			$form[$prefix . 'username']['#required'] = true;
		}
	}
	
	if ($which == 'email' || $which == 'both') {
		$form[$prefix . 'email'] = array(
			'#type' => 'textfield',
			'#title' => forgot_password_variable('email_label')
		);
		if ($which == 'email') {
			$form[$prefix . 'email']['#required'] = true;
		}
	}
	
	$form['change'] = array(
		'#type' => 'submit',
		'#value' => forgot_password_variable('button1_label')
	);
	
	return $form;
}


/**
 * hook_validate for forgot_password_screen1()
 */
function forgot_password_screen1_validate($form, &$form_state) {

	$prefix = 'forgot_password_';

	$which = forgot_password_variable('which');
	
	if ($which == 'both') {
		$u = trim($form_state['values'][$prefix . 'username']);
		$e = trim($form_state['values'][$prefix . 'email']);
		
		if ($u == '' && $e == '') {
			form_set_error($prefix . 'username', 'You must enter a value.');
		}
	}

}


/**
 * hook_submit for forgot_password_screen1()
 *
 * generate a "secret key" and store that in the db
 * send an email with a link, the link includes the key
 */
function forgot_password_screen1_submit($form, &$form_state) {

	$prefix = 'forgot_password_';
	
	// first, let's look up this user
	$fpu = trim($form_state['values'][$prefix . 'username']);
	$fpe = trim($form_state['values'][$prefix . 'email']);
	
	if ($fpu != '') {
		$u = user_load(array('name' => $fpu));
	}	

	if ($fpe != '') {
		$u = user_load(array('mail' => $fpe));
	}
	
	if (!isset($u) || $u == false) drupal_goto('forgot_password');
	
	$uid = $u->uid;
	
	$secret_key = uniqid('', true);
	
	$sql  = 'INSERT INTO forgot_password (secret_key, uid) VALUES (';
	$sql .= '"' . $secret_key . '", ';
	$sql .= '"' . $uid . '" ';
	$sql .= ')';
	db_query($sql);

	$to    = $u->mail;
	$subj  = variable_get('site_name', '') . ' :: Forgot Password';
	$body  = variable_get($prefix . 'email_text', '') . chr(10) . chr(10);
	$body .= $_SERVER['HTTP_HOST'] . '/forgot_password/' . $secret_key;
	
	$headers = 'From: ' . variable_get('site_mail', '') . "\r\n";

	mail($to, $subj, $body, $headers);
	
	drupal_set_message(forgot_password_variable('message1'));

}


/**
 * Form prompting user for new password.
 */
function forgot_password_screen2($foo, $uid) {

	$prefix = 'forgot_password_';

	$form = array();
	
	$form[$prefix . 'uid'] = array(
		'#type' => 'hidden',
		'#value' => $uid
	);
	
	$form[$prefix . 'pw'] = array(
		'#type' => 'password_confirm',
		'#required' => true
	);
	
	$form['go'] = array(
		'#type' => 'submit',
		'#value' => forgot_password_variable('button2_label')
	);

	
	return $form;

}


/**
 * hook_submit for forgot_password_screen2()
 */
function forgot_password_screen2_submit($form, &$form_state) {

	$prefix = 'forgot_password_';

	$user = user_load(array('uid' => $form_state['values'][$prefix . 'uid']));
	$data = array('pass' => $form_state['values'][$prefix . 'pw']);
	user_save($user, $data);
	
	drupal_set_message(forgot_password_variable('message2'));
	drupal_goto(forgot_password_variable('redirect'));

}


/**
 * hook_cron
 */
function forgot_password_cron() {

	$cutoff = strtotime('-48 hours');

	$keys = array();
	$sql = 'SELECT * FROM forgot_password ORDER BY dtstamp';
	$res = db_query($sql);
	while ($row = db_fetch_array($res)) {
		$keys[] = $row;
	}
		
	foreach ($keys as $key) {
	
		$dtstamp = strtotime($key['dtstamp']);
		if ($dtstamp < $cutoff) {
			$sql  = 'DELETE FROM forgot_password ';
			$sql .= 'WHERE secret_key = "' . $key['secret_key'] . '" ';
			db_query($sql);
		}
		
	}
	
}